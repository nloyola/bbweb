# Logger
# ~~~~~
# see logback-test.xml file in the conf directory .

admin.email="biobank2@gmail.com"
admin.url="biobbank.com"

play.mailer {
  mock=true
}

play.modules.enabled += "org.biobank.modules.AkkaModule"
play.modules.enabled += "org.biobank.modules.SilhouetteModule"
play.modules.enabled += "org.biobank.fixtures.BbwebTestModule"

play.modules.disabled += "play.api.cache.ehcache.EhCacheModule"

play.cache.createBoundCaches = false

application.schema {
  create = false
  show = false
}

akka.actor.warn-about-java-serializer-usage=false

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-config-on-start = on

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "INFO"

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }

  actor {
    serialize-messages = off

    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "scalapb.GeneratedMessage" = proto
    }

    default-dispatcher {
      executor = "thread-pool-executor"
      throughput = 1
      thread-pool-executor {
        fixed-pool-size = 55 # db conn pool (50) + number of cores (4) + housekeeping (1)
      }
    }
  }

  debug {
    # enable function of LoggingReceive, which is to log any received message at
    # DEBUG level
    receive = off

    # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill and the like)
    autoreceive = off

    # enable DEBUG logging of actor lifecycle changes
    lifecycle = off

    # enable DEBUG logging of subscription changes on the eventStream
    event-stream = off
  }
}

#inmemory-read-journal {
#  write-plugin = "inmemory-journal"
#  offset-mode = "sequence"
#  ask-timeout = "10s"
#  refresh-interval = "100ms"
#  max-buffer-size = "100"
#}

bbweb-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = 55 # db conn pool (50) + number of cores (4) + housekeeping (1)
  }
}

slick {

  dbs {
    default {
      profile = "slick.jdbc.H2Profile$"

      db {
        url = "jdbc:h2:mem:bbweb_query"
        driver = "org.h2.Driver"
        maxThreads = 1
      }
    }
  }
}


include "silhouette.conf"
